{"ast":null,"code":"import _objectSpread from \"/home/armin/Documents/Test/testTechnique/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/armin/Documents/Test/testTechnique/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/armin/Documents/Test/testTechnique/client/src/components/Dashboard/Modal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport socketIOClient from 'socket.io-client';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4),\n    outline: 'none'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nconst socket = socketIOClient('http://localhost:5000');\nexport default function SimpleModal(props) {\n  // console.log(props, \"modal\")\n  // var tab = props.detail;\n  // console.log(tab, \"KOKOKOK\");\n  const classes = useStyles();\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  const _React$useState5 = React.useState({\n    age: 'true',\n    name: 'hai'\n  }),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        values = _React$useState6[0],\n        setValues = _React$useState6[1];\n\n  const _React$useState7 = React.useState({}),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        form = _React$useState8[0],\n        setForm = _React$useState8[1];\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleChange(event) {\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  const edit = async () => {\n    form._id = await props.detail._id;\n    console.log(form);\n    socket.emit('test', form);\n  };\n\n  if (props.detail === undefined) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: open,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Update \", props.detail.name), React.createElement(InputLabel, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Name: \"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: form.name,\n      onChange: e => setForm(_objectSpread({}, form, {\n        name: e.target.value\n      })),\n      placeholder: props.detail.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \"), React.createElement(InputLabel, {\n      htmlFor: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Type: \"), React.createElement(Input, {\n      type: \"text\",\n      name: \"type\",\n      value: form.type,\n      onChange: e => setForm(_objectSpread({}, form, {\n        type: e.target.value\n      })),\n      id: \"type\",\n      placeholder: props.detail.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \"), React.createElement(InputLabel, {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Price: \"), React.createElement(Input, {\n      type: \"text\",\n      name: \"price\",\n      value: form.price,\n      onChange: e => setForm(_objectSpread({}, form, {\n        price: e.target.value\n      })),\n      id: \"price\",\n      placeholder: props.detail.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \"), React.createElement(InputLabel, {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Rating: \"), React.createElement(Input, {\n      type: \"text\",\n      name: \"rating\",\n      value: form.rating,\n      onChange: e => setForm(_objectSpread({}, form, {\n        rating: e.target.value\n      })),\n      id: \"rating\",\n      placeholder: props.detail.rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" \"), React.createElement(InputLabel, {\n      htmlFor: \"warranty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Warranty_years: \"), React.createElement(Input, {\n      type: \"text\",\n      name: \"warranty\",\n      value: form.warranty_years,\n      onChange: e => setForm(_objectSpread({}, form, {\n        warranty_years: e.target.value\n      })),\n      id: \"warranty\",\n      placeholder: props.detail.warranty_years,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \" \"), React.createElement(InputLabel, {\n      htmlFor: \"availability\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Availability: \"), React.createElement(Select, {\n      value: values.age,\n      onChange: handleChange,\n      inputProps: {\n        name: 'availability',\n        id: 'availability'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Availability\")), React.createElement(MenuItem, {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"True\"), React.createElement(MenuItem, {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"False\")), React.createElement(\"p\", {\n      id: \"simple-modal-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(SimpleModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Send\"))));\n  }\n}","map":{"version":3,"sources":["/home/armin/Documents/Test/testTechnique/client/src/components/Dashboard/Modal.js"],"names":["React","makeStyles","Modal","Button","Input","Select","FormControl","MenuItem","InputLabel","socketIOClient","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","outline","formControl","margin","minWidth","socket","SimpleModal","props","classes","useState","modalStyle","open","setOpen","age","name","values","setValues","form","setForm","handleOpen","handleClose","handleChange","event","oldValues","target","value","edit","_id","detail","console","log","emit","undefined","e","type","price","rating","warranty_years","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport socketIOClient from 'socket.io-client'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 4),\n    outline: 'none',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\nconst socket = socketIOClient('http://localhost:5000');\n\nexport default function SimpleModal(props) {\n    // console.log(props, \"modal\")\n    // var tab = props.detail;\n  // console.log(tab, \"KOKOKOK\");\n  \n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const [values, setValues] = React.useState({\n    age: 'true',\n    name: 'hai',\n  });\n  const [form, setForm] = React.useState({});\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChange(event) {\n    setValues(oldValues => ({\n      ...oldValues,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  const edit = async () => {\n    form._id = await props.detail._id;\n    console.log(form);\n    socket.emit('test', form)\n  }\n\n  if(props.detail === undefined){\n    return <div></div>\n  }\n  else{\n    return (\n      <div>\n        <Button type=\"button\" onClick={handleOpen}>\n          Edit\n        </Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={open}\n          onClose={handleClose}\n        >\n          <div style={modalStyle} className={classes.paper}>\n            <h2 id=\"modal-title\">Update {props.detail.name}</h2>\n            {/* <FormControl className={classes.formControl}> */}\n\n            <InputLabel htmlFor=\"name\">Name: </InputLabel>\n            <Input type='text' name=\"name\" value={form.name} onChange={(e) => setForm({...form, name: e.target.value})} placeholder={props.detail.name}> </Input>\n\n            <InputLabel htmlFor=\"type\">Type: </InputLabel>\n            <Input type='text' name=\"type\" value={form.type} onChange={(e) => setForm({...form, type: e.target.value})} id=\"type\" placeholder={props.detail.type}> </Input>\n            \n            <InputLabel htmlFor=\"price\">Price: </InputLabel>\n            <Input type='text' name=\"price\" value={form.price} onChange={(e) => setForm({...form, price: e.target.value})} id=\"price\" placeholder={props.detail.price}> </Input>\n\n            <InputLabel htmlFor=\"rating\">Rating: </InputLabel>\n            <Input type='text' name=\"rating\" value={form.rating} onChange={(e) => setForm({...form, rating: e.target.value})} id=\"rating\" placeholder={props.detail.rating}> </Input>\n\n            <InputLabel htmlFor=\"warranty\">Warranty_years: </InputLabel>\n            <Input type='text' name=\"warranty\" value={form.warranty_years} onChange={(e) => setForm({...form, warranty_years: e.target.value})} id=\"warranty\" placeholder={props.detail.warranty_years}> </Input>\n\n            <InputLabel htmlFor=\"availability\">Availability: </InputLabel>\n\n            <Select\n            value={values.age}\n            onChange={handleChange}\n            inputProps={{\n              name: 'availability',\n              id: 'availability',\n            }}\n          >\n          <MenuItem value=\"\">\n              <em>Availability</em>\n            </MenuItem>\n            <MenuItem value={true}>True</MenuItem>\n            <MenuItem value={false}>False</MenuItem>\n          </Select>\n          \n            <p id=\"simple-modal-description\">\n              \n            </p>\n            <SimpleModal />\n            <Button onClick={edit}>Send</Button>\n\n            {/* </FormControl> */}\n          </div>\n        </Modal>\n      </div>\n    ); \n  }\n}"]},"metadata":{},"sourceType":"module"}