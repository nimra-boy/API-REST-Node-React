{"ast":null,"code":"var _jsxFileName = \"/home/armin/Documents/Test/testTechnique/client/src/components/Dashboard/Dashboard.js\";\nimport React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport io from 'socket.io-client';\nimport API from '../../utils/API';\nexport class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.disconnect = event => {\n      API.logout();\n      window.location = \"/\";\n    };\n\n    this.state = {\n      all: []\n    };\n    this.disconnect.bind(this);\n    this.socket = io('http://localhost:8000');\n    this.socket.on('all', data => {\n      getData(data);\n    });\n\n    const getData = data => {\n      console.log(data);\n      this.setState({\n        all: data\n      });\n      console.log(this.state.all);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(Button, {\n      onClick: this.disconnect,\n      block: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Se d\\xE9connecter\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.all.map(getall => getall.map(get => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, get.price)))));\n  }\n\n}","map":{"version":3,"sources":["/home/armin/Documents/Test/testTechnique/client/src/components/Dashboard/Dashboard.js"],"names":["React","Button","io","API","Dashboard","Component","constructor","props","disconnect","event","logout","window","location","state","all","bind","socket","on","data","getData","console","log","setState","render","map","getall","get","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAEA,OAAO,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,UAnBkB,GAmBLC,KAAK,IAAI;AAClBN,MAAAA,GAAG,CAACO,MAAJ;AACAC,MAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACH,KAtBiB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE;AADI,KAAb;AAGA,SAAKN,UAAL,CAAgBO,IAAhB,CAAqB,IAArB;AACA,SAAKC,MAAL,GAAcd,EAAE,CAAC,uBAAD,CAAhB;AAEA,SAAKc,MAAL,CAAYC,EAAZ,CAAe,KAAf,EAAuBC,IAAD,IAAU;AAC5BC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KAFD;;AAIA,UAAMC,OAAO,GAAGD,IAAI,IAAI;AACpBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAKI,QAAL,CAAc;AAAER,QAAAA,GAAG,EAAEI;AAAP,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,GAAvB;AACH,KAJD;AAKH;;AAMDS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,MAAD;AACA,MAAA,OAAO,EAAE,KAAKf,UADd;AAEA,MAAA,KAAK,MAFL;AAGA,MAAA,IAAI,EAAC,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKK,KAAL,CAAWC,GAAX,CAAeU,GAAf,CAAmBC,MAAM,IACtBA,MAAM,CAACD,GAAP,CAAWE,GAAG,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,GAAG,CAACC,KADT,CADA,CADH,CADL,CATJ,CADJ;AAqBH;;AA9C0C","sourcesContent":["import React from 'react';\nimport { Button } from \"react-bootstrap\";\nimport io from 'socket.io-client';\n\nimport API from '../../utils/API';\n\nexport class Dashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            all: []\n        }\n        this.disconnect.bind(this);\n        this.socket = io('http://localhost:8000');\n\n        this.socket.on('all', (data) => {\n            getData(data);\n        });\n\n        const getData = data => {\n            console.log(data);\n            this.setState({ all: data});\n            console.log(this.state.all);\n        };\n    }\n\n    disconnect = event => {\n        API.logout();\n        window.location = \"/\";\n    }\n    render() {\n        return(\n            <div className=\"Dashboard\">\n                <h1>Dashboard</h1>\n                <Button\n                onClick={this.disconnect}\n                block\n                type=\"submit\"\n                >\n                Se d√©connecter\n                </Button>\n                <div>\n                    {this.state.all.map(getall => \n                        getall.map(get =>\n                        <div>\n                            {get.price}\n                        </div>    \n                        )\n                    )}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}